from CTF.RSA import *
p = int(
    "0xE83394F7CDF378BC3177BD5714E25F4B8E609187770581CB6221901505B8AAC72826D138C6C1F947720BBD59ECC226932B67FDEFEB5B73378A80072309908929",
    16)
q = int(
    "0xDECC1771ADC7278C81A5F67ABFA683A1BE92CA64EE78C9B2D26EDEA0F0E8AEE3DBF498D38E095E3B0B9D23D2CFC088798EAF69237DD227AB0739F47532045735",
    16)

e = int("0x10001", 16)
C = int(
    "0XB03D4DBB45C5BEEDD0359B91B541804E12B60C7072B115CD65D7904C2049426609DFBEEF406C222C53F5CFAC1F0450CD73A76821B48393D8966404BAB2F3AFEADD8DB4CE7C892A9406DD5E2AA15E09C26C59282CA8865BC9E99ACDD60F9C834805CD1AC8F81DB2683733DA92403883A2AE87EF9BB3FE98676AEBF8D1EACED15E",
    16)

n = p * q

# print("p = ", p)
# print("q = ", q)
# print("n = ", n)
# print("C = ", C)



l = (p - 1) * (q - 1)
#print("l = ", hex(l))
#print("e = ", hex(e))
d = inverse(e, l)
#print("d = ", hex(d))
#print("(e*d)%l", (e * d) % l)  # verification de l'inverse

print(dechiffreRSA(C, d, n))


